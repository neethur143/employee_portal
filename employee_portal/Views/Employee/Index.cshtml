
@model X.PagedList.IPagedList<employee_portal.Models.TbEmployee>
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;
@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<div class="container shadow p-5">
    <h1 class="text-center mb-3">EMPLOYEE PORTAL</h1>
    <div class="col mb-3 text-center">
        @if (!string.IsNullOrEmpty(ViewBag.Message))
        {
            <div class="alert alert-warning">
                @ViewBag.Message
            </div>
        }
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }
        <form method="get" asp-controller="Employee" asp-action="Search">
            <div class="input-group">
                <input type="text" name="SearchString" placeholder="Search employees" class="form-control" id="searchInput" />
                <div class="input-group-append">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
    <div class="col mb-4 text-center">
        <a asp-controller="Employee" asp-action="Addemployee" class="btn btn-lg btn-primary"><i class="bi bi-file-plus-fill"></i>Add Employee</a>
    </div>

    <table class="table table-hover table-bordered ">
        <thead>
            <tr class="bg-light">
                <th data-sort="EmployeeCode">
                    Code
                    <i class="fas fa-sort"></i>
                </th>
                <th data-sort="Firstname">
                    Name
                    <i class="fas fa-sort"></i>
                </th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Date of Birth</th>
                <th>Date of Join</th>
                @* <th>Department</th> *@
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.EmployeeCode)</td>
                    <td>@(item.Firstname + " " + item.Lastname)</td>                    
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Phonenumber)</td>
                    <td>@item.DateOfBirth.ToString("d")</td>
                    <td>@item.DateOfJoin.ToString("yyyy-MM-dd")</td>
                    
                    @* <td>@(item.Department != null ? item.Department.Departmentname : "N/A")</td> *@

                    <td class="text-center">
                        <a asp-controller="Employee" asp-action="Details" class="btn btn-outline-info" asp-route-id="@item.EmployeeId">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        ActiveLiElementClass = "active",
        LinkToPreviousPageFormat = "Previous",
        LinkToNextPageFormat = "Next"
        })
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to sort the table
            function sortTable(columnIndex) {
                var table = $('.table'); // Change this selector to match your table
                var rows = table.find('tbody > tr').get();

                rows.sort(function (a, b) {
                    var keyA = $(a).find('td').eq(columnIndex).text();
                    var keyB = $(b).find('td').eq(columnIndex).text();

                    if (keyA < keyB) return -1;
                    if (keyA > keyB) return 1;
                    return 0;
                });

                $.each(rows, function (index, row) {
                    table.children('tbody').append(row);
                });
            }

            // Handle click on header to sort
            $('th[data-sort]').on('click', function () {
                var columnIndex = $(this).index();
                sortTable(columnIndex);
            });
        });
    </script>

</div>
